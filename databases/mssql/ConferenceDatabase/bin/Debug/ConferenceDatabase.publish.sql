/*
Deployment script for Conferences

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "Conferences"
:setvar DefaultFilePrefix "Conferences"
:setvar DefaultDataPath "C:\sqldata\MSSQL14.SQL2016\MSSQL\DATA\"
:setvar DefaultLogPath "C:\sqldata\MSSQL14.SQL2016\MSSQL\DATA\"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [$(DatabaseName)];


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET ANSI_NULLS ON,
                ANSI_PADDING ON,
                ANSI_WARNINGS ON,
                ARITHABORT ON,
                CONCAT_NULL_YIELDS_NULL ON,
                QUOTED_IDENTIFIER ON,
                ANSI_NULL_DEFAULT ON,
                CURSOR_DEFAULT LOCAL,
                RECOVERY FULL 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET PAGE_VERIFY NONE 
            WITH ROLLBACK IMMEDIATE;
    END


GO
ALTER DATABASE [$(DatabaseName)]
    SET TARGET_RECOVERY_TIME = 0 SECONDS 
    WITH ROLLBACK IMMEDIATE;


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET QUERY_STORE (CLEANUP_POLICY = (STALE_QUERY_THRESHOLD_DAYS = 367)) 
            WITH ROLLBACK IMMEDIATE;
    END


GO
PRINT N'Rename refactoring operation with key 5101fbf1-b97d-4c3f-b154-78459daddf38 is skipped, element [dbo].[ConferenceDates].[DayType] (SqlSimpleColumn) will not be renamed to WorkshopDay';


GO
PRINT N'Creating [dbo].[AtendeeTickets]...';


GO
CREATE TABLE [dbo].[AtendeeTickets] (
    [AttendeeTicketId] INT            IDENTITY (1, 1) NOT NULL,
    [AttendeeId]       INT            NOT NULL,
    [TicketPriceId]    INT            NOT NULL,
    [DiscountCodeId]   INT            NULL,
    [NetPrice]         DECIMAL (8, 2) NOT NULL,
    CONSTRAINT [PK_AtendeeTickets] PRIMARY KEY CLUSTERED ([AttendeeTicketId] ASC)
);


GO
PRINT N'Creating [dbo].[Attendees]...';


GO
CREATE TABLE [dbo].[Attendees] (
    [AttendeeId]  INT          IDENTITY (1, 1) NOT NULL,
    [FirstName]   VARCHAR (30) NOT NULL,
    [LastName]    VARCHAR (30) NOT NULL,
    [Title]       VARCHAR (40) NULL,
    [Company]     VARCHAR (50) NULL,
    [Email]       VARCHAR (80) NOT NULL,
    [PhoneNumber] VARCHAR (20) NULL,
    CONSTRAINT [PK_Attendees] PRIMARY KEY CLUSTERED ([AttendeeId] ASC)
);


GO
PRINT N'Creating [dbo].[ConferenceDates]...';


GO
CREATE TABLE [dbo].[ConferenceDates] (
    [ConferenceDateId] INT  IDENTITY (1, 1) NOT NULL,
    [ConferenceId]     INT  NOT NULL,
    [ConferenceDay]    DATE NOT NULL,
    [WorkshopDay]      BIT  NOT NULL,
    CONSTRAINT [PK_ConferenceDates] PRIMARY KEY CLUSTERED ([ConferenceDateId] ASC)
);


GO
PRINT N'Creating [dbo].[Conferences]...';


GO
CREATE TABLE [dbo].[Conferences] (
    [ConferenceId]   INT            IDENTITY (1, 1) NOT NULL,
    [ConferenceName] VARCHAR (50)   NOT NULL,
    [Location]       VARCHAR (40)   NOT NULL,
    [City]           VARCHAR (40)   NOT NULL,
    [RegionCode]     VARCHAR (2)    NOT NULL,
    [StartDate]      DATE           NOT NULL,
    [EndDate]        DATE           NOT NULL,
    [Description]    VARCHAR (4000) NOT NULL,
    CONSTRAINT [PK_Conferences] PRIMARY KEY CLUSTERED ([ConferenceId] ASC)
);


GO
PRINT N'Creating [dbo].[ConferenceSchedules]...';


GO
CREATE TABLE [dbo].[ConferenceSchedules] (
    [ScheduleId]           INT          IDENTITY (1, 1) NOT NULL,
    [ConferenceTimeSlotId] INT          NOT NULL,
    [SessionId]            INT          NOT NULL,
    [Room]                 VARCHAR (30) NOT NULL,
    CONSTRAINT [PK_ConferenceSchedules] PRIMARY KEY CLUSTERED ([ScheduleId] ASC)
);


GO
PRINT N'Creating [dbo].[ConferenceTimeSlots]...';


GO
CREATE TABLE [dbo].[ConferenceTimeSlots] (
    [ConferenceTimeSlotId] INT      IDENTITY (1, 1) NOT NULL,
    [ConferenceDateId]     INT      NOT NULL,
    [StartTime]            TIME (7) NOT NULL,
    [EndTime]              TIME (7) NOT NULL,
    CONSTRAINT [PK_ConferenceTimeSlots] PRIMARY KEY CLUSTERED ([ConferenceTimeSlotId] ASC)
);


GO
PRINT N'Creating [dbo].[DiscountCodes]...';


GO
CREATE TABLE [dbo].[DiscountCodes] (
    [DiscountCodeId] INT            IDENTITY (1, 1) NOT NULL,
    [ConferenceId]   INT            NOT NULL,
    [DiscountCode]   VARCHAR (20)   NOT NULL,
    [DiscountName]   VARCHAR (30)   NOT NULL,
    [DiscountType]   VARCHAR (1)    NOT NULL,
    [DiscountAmount] DECIMAL (8, 2) NOT NULL,
    CONSTRAINT [PK_DiscountCodes] PRIMARY KEY CLUSTERED ([DiscountCodeId] ASC)
);


GO
PRINT N'Creating [dbo].[PricingCategories]...';


GO
CREATE TABLE [dbo].[PricingCategories] (
    [PricingCategoryCode] VARCHAR (1)  NOT NULL,
    [PricingCategoryName] VARCHAR (20) NOT NULL,
    CONSTRAINT [PK_PricingCategories] PRIMARY KEY CLUSTERED ([PricingCategoryCode] ASC)
);


GO
PRINT N'Creating [dbo].[Regions]...';


GO
CREATE TABLE [dbo].[Regions] (
    [RegionCode] VARCHAR (2)  NOT NULL,
    [RegionName] VARCHAR (30) NOT NULL,
    CONSTRAINT [PK_Regions] PRIMARY KEY CLUSTERED ([RegionCode] ASC)
);


GO
PRINT N'Creating [dbo].[Sessions]...';


GO
CREATE TABLE [dbo].[Sessions] (
    [SessionId]          INT            IDENTITY (1, 1) NOT NULL,
    [SessionName]        VARCHAR (80)   NOT NULL,
    [SessionDescription] VARCHAR (1024) NOT NULL,
    [SessionType]        VARCHAR (1)    NOT NULL,
    [SessionLength]      INT            NOT NULL,
    CONSTRAINT [PK_Sessions] PRIMARY KEY CLUSTERED ([SessionId] ASC)
);


GO
PRINT N'Creating [dbo].[SessionTags]...';


GO
CREATE TABLE [dbo].[SessionTags] (
    [SessionTagId] INT          IDENTITY (1, 1) NOT NULL,
    [SessionID]    INT          NOT NULL,
    [Tag]          VARCHAR (30) NOT NULL,
    CONSTRAINT [PK_SessionTags] PRIMARY KEY CLUSTERED ([SessionTagId] ASC)
);


GO
PRINT N'Creating [dbo].[SessionTypes]...';


GO
CREATE TABLE [dbo].[SessionTypes] (
    [SessionTypeCode] VARCHAR (4)  NOT NULL,
    [TalkTypeName]    VARCHAR (20) NOT NULL,
    CONSTRAINT [PK_TalkTypes] PRIMARY KEY CLUSTERED ([SessionTypeCode] ASC)
);


GO
PRINT N'Creating [dbo].[Speakers]...';


GO
CREATE TABLE [dbo].[Speakers] (
    [SpeakerId]    INT            IDENTITY (1, 1) NOT NULL,
    [FirstName]    VARCHAR (30)   NOT NULL,
    [LastName]     VARCHAR (30)   NOT NULL,
    [Title]        VARCHAR (30)   NOT NULL,
    [Company]      VARCHAR (30)   NOT NULL,
    [SpeakerBio]   VARCHAR (2000) NOT NULL,
    [SpeakerPhoto] VARCHAR (80)   NOT NULL,
    CONSTRAINT [PK_Speakers] PRIMARY KEY CLUSTERED ([SpeakerId] ASC)
);


GO
PRINT N'Creating [dbo].[SpeakerSessions]...';


GO
CREATE TABLE [dbo].[SpeakerSessions] (
    [SpeakerSessionId] INT IDENTITY (1, 1) NOT NULL,
    [SpeakerId]        INT NOT NULL,
    [SessionID]        INT NOT NULL,
    CONSTRAINT [PK_SpeakerSessions] PRIMARY KEY CLUSTERED ([SpeakerSessionId] ASC)
);


GO
PRINT N'Creating [dbo].[Tags]...';


GO
CREATE TABLE [dbo].[Tags] (
    [Tag] VARCHAR (30) NOT NULL,
    CONSTRAINT [PK_Tags] PRIMARY KEY CLUSTERED ([Tag] ASC)
);


GO
PRINT N'Creating [dbo].[TicketPrices]...';


GO
CREATE TABLE [dbo].[TicketPrices] (
    [TicketPriceId]       INT            IDENTITY (1, 1) NOT NULL,
    [ConferenceId]        INT            NOT NULL,
    [TicketTypeCode]      VARCHAR (1)    NOT NULL,
    [PricingCategoryCode] VARCHAR (1)    NOT NULL,
    [PricingStartDate]    DATE           NOT NULL,
    [PricingEndDate]      DATE           NOT NULL,
    [BasePrice]           DECIMAL (8, 2) NOT NULL,
    CONSTRAINT [PK_TicketPrices] PRIMARY KEY CLUSTERED ([TicketPriceId] ASC)
);


GO
PRINT N'Creating [dbo].[TicketTypes]...';


GO
CREATE TABLE [dbo].[TicketTypes] (
    [TicketTypeCode]     VARCHAR (1)   NOT NULL,
    [TicketCategoryName] VARCHAR (20)  NOT NULL,
    [Description]        VARCHAR (100) NOT NULL,
    [IncludesWorkshop]   BIT           NOT NULL,
    CONSTRAINT [PK_TicketTypes] PRIMARY KEY CLUSTERED ([TicketTypeCode] ASC)
);


GO
PRINT N'Creating [dbo].[WorkshopPresenters]...';


GO
CREATE TABLE [dbo].[WorkshopPresenters] (
    [WorkshopPresentersId] INT IDENTITY (1, 1) NOT NULL,
    [WorkshopId]           INT NOT NULL,
    [SpeakerId]            INT NOT NULL,
    CONSTRAINT [PK_WorkshopPresenters] PRIMARY KEY CLUSTERED ([WorkshopPresentersId] ASC)
);


GO
PRINT N'Creating [dbo].[Workshops]...';


GO
CREATE TABLE [dbo].[Workshops] (
    [WorkshopId]   INT            IDENTITY (1, 1) NOT NULL,
    [WorkshopName] VARCHAR (60)   NOT NULL,
    [Description]  VARCHAR (1024) NOT NULL,
    [Requirements] VARCHAR (1024) NOT NULL,
    CONSTRAINT [PK_Workshops] PRIMARY KEY CLUSTERED ([WorkshopId] ASC)
);


GO
PRINT N'Creating unnamed constraint on [dbo].[TicketTypes]...';


GO
ALTER TABLE [dbo].[TicketTypes]
    ADD DEFAULT 0 FOR [IncludesWorkshop];


GO
PRINT N'Creating [dbo].[FK_AttendeeTickets_AttendeeId]...';


GO
ALTER TABLE [dbo].[AtendeeTickets] WITH NOCHECK
    ADD CONSTRAINT [FK_AttendeeTickets_AttendeeId] FOREIGN KEY ([AttendeeId]) REFERENCES [dbo].[Attendees] ([AttendeeId]);


GO
PRINT N'Creating [dbo].[FK_AttendeeTickets_TicketPriceId]...';


GO
ALTER TABLE [dbo].[AtendeeTickets] WITH NOCHECK
    ADD CONSTRAINT [FK_AttendeeTickets_TicketPriceId] FOREIGN KEY ([TicketPriceId]) REFERENCES [dbo].[TicketPrices] ([TicketPriceId]);


GO
PRINT N'Creating [dbo].[FK_AttendeeTickets_DiscountId]...';


GO
ALTER TABLE [dbo].[AtendeeTickets] WITH NOCHECK
    ADD CONSTRAINT [FK_AttendeeTickets_DiscountId] FOREIGN KEY ([DiscountCodeId]) REFERENCES [dbo].[DiscountCodes] ([DiscountCodeId]);


GO
PRINT N'Creating [dbo].[FK_ConferenceDates_ConferenceID]...';


GO
ALTER TABLE [dbo].[ConferenceDates] WITH NOCHECK
    ADD CONSTRAINT [FK_ConferenceDates_ConferenceID] FOREIGN KEY ([ConferenceId]) REFERENCES [dbo].[Conferences] ([ConferenceId]);


GO
PRINT N'Creating [dbo].[FK_ConferenceSchedules_TimeSlotId]...';


GO
ALTER TABLE [dbo].[ConferenceSchedules] WITH NOCHECK
    ADD CONSTRAINT [FK_ConferenceSchedules_TimeSlotId] FOREIGN KEY ([ConferenceTimeSlotId]) REFERENCES [dbo].[ConferenceTimeSlots] ([ConferenceTimeSlotId]);


GO
PRINT N'Creating [dbo].[FK_ConferenceTimeSlots]...';


GO
ALTER TABLE [dbo].[ConferenceTimeSlots] WITH NOCHECK
    ADD CONSTRAINT [FK_ConferenceTimeSlots] FOREIGN KEY ([ConferenceDateId]) REFERENCES [dbo].[ConferenceDates] ([ConferenceDateId]);


GO
PRINT N'Creating [dbo].[FK_DiscountCodes_ConferenceId]...';


GO
ALTER TABLE [dbo].[DiscountCodes] WITH NOCHECK
    ADD CONSTRAINT [FK_DiscountCodes_ConferenceId] FOREIGN KEY ([ConferenceId]) REFERENCES [dbo].[Conferences] ([ConferenceId]);


GO
PRINT N'Creating [dbo].[FK_SessionTags_SessionID]...';


GO
ALTER TABLE [dbo].[SessionTags] WITH NOCHECK
    ADD CONSTRAINT [FK_SessionTags_SessionID] FOREIGN KEY ([SessionID]) REFERENCES [dbo].[Sessions] ([SessionId]);


GO
PRINT N'Creating [dbo].[FK_SessionTags_Tag]...';


GO
ALTER TABLE [dbo].[SessionTags] WITH NOCHECK
    ADD CONSTRAINT [FK_SessionTags_Tag] FOREIGN KEY ([Tag]) REFERENCES [dbo].[Tags] ([Tag]);


GO
PRINT N'Creating [dbo].[FK_SpeakerSessions_SpeakerId]...';


GO
ALTER TABLE [dbo].[SpeakerSessions] WITH NOCHECK
    ADD CONSTRAINT [FK_SpeakerSessions_SpeakerId] FOREIGN KEY ([SpeakerId]) REFERENCES [dbo].[Speakers] ([SpeakerId]);


GO
PRINT N'Creating [dbo].[FK_SpeakerSessions_SessionId]...';


GO
ALTER TABLE [dbo].[SpeakerSessions] WITH NOCHECK
    ADD CONSTRAINT [FK_SpeakerSessions_SessionId] FOREIGN KEY ([SessionID]) REFERENCES [dbo].[Sessions] ([SessionId]);


GO
PRINT N'Creating [dbo].[FK_TicketPrices_ConferenceId]...';


GO
ALTER TABLE [dbo].[TicketPrices] WITH NOCHECK
    ADD CONSTRAINT [FK_TicketPrices_ConferenceId] FOREIGN KEY ([ConferenceId]) REFERENCES [dbo].[Conferences] ([ConferenceId]);


GO
PRINT N'Creating [dbo].[FK_TicketPrices_TicketTypeCode]...';


GO
ALTER TABLE [dbo].[TicketPrices] WITH NOCHECK
    ADD CONSTRAINT [FK_TicketPrices_TicketTypeCode] FOREIGN KEY ([TicketTypeCode]) REFERENCES [dbo].[TicketTypes] ([TicketTypeCode]);


GO
PRINT N'Creating [dbo].[FK_TicketPrices_PricingCategoryCode]...';


GO
ALTER TABLE [dbo].[TicketPrices] WITH NOCHECK
    ADD CONSTRAINT [FK_TicketPrices_PricingCategoryCode] FOREIGN KEY ([PricingCategoryCode]) REFERENCES [dbo].[PricingCategories] ([PricingCategoryCode]);


GO
PRINT N'Creating [dbo].[FK_WorkshopPresenters_WorkshopId]...';


GO
ALTER TABLE [dbo].[WorkshopPresenters] WITH NOCHECK
    ADD CONSTRAINT [FK_WorkshopPresenters_WorkshopId] FOREIGN KEY ([WorkshopId]) REFERENCES [dbo].[Workshops] ([WorkshopId]);


GO
PRINT N'Creating [dbo].[FK_WorkshopPresenters_SessionId]...';


GO
ALTER TABLE [dbo].[WorkshopPresenters] WITH NOCHECK
    ADD CONSTRAINT [FK_WorkshopPresenters_SessionId] FOREIGN KEY ([SpeakerId]) REFERENCES [dbo].[Speakers] ([SpeakerId]);


GO
-- Refactoring step to update target server with deployed transaction logs

IF OBJECT_ID(N'dbo.__RefactorLog') IS NULL
BEGIN
    CREATE TABLE [dbo].[__RefactorLog] (OperationKey UNIQUEIDENTIFIER NOT NULL PRIMARY KEY)
    EXEC sp_addextendedproperty N'microsoft_database_tools_support', N'refactoring log', N'schema', N'dbo', N'table', N'__RefactorLog'
END
GO
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '5101fbf1-b97d-4c3f-b154-78459daddf38')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('5101fbf1-b97d-4c3f-b154-78459daddf38')

GO

GO
PRINT N'Checking existing data against newly created constraints';


GO
USE [$(DatabaseName)];


GO
ALTER TABLE [dbo].[AtendeeTickets] WITH CHECK CHECK CONSTRAINT [FK_AttendeeTickets_AttendeeId];

ALTER TABLE [dbo].[AtendeeTickets] WITH CHECK CHECK CONSTRAINT [FK_AttendeeTickets_TicketPriceId];

ALTER TABLE [dbo].[AtendeeTickets] WITH CHECK CHECK CONSTRAINT [FK_AttendeeTickets_DiscountId];

ALTER TABLE [dbo].[ConferenceDates] WITH CHECK CHECK CONSTRAINT [FK_ConferenceDates_ConferenceID];

ALTER TABLE [dbo].[ConferenceSchedules] WITH CHECK CHECK CONSTRAINT [FK_ConferenceSchedules_TimeSlotId];

ALTER TABLE [dbo].[ConferenceTimeSlots] WITH CHECK CHECK CONSTRAINT [FK_ConferenceTimeSlots];

ALTER TABLE [dbo].[DiscountCodes] WITH CHECK CHECK CONSTRAINT [FK_DiscountCodes_ConferenceId];

ALTER TABLE [dbo].[SessionTags] WITH CHECK CHECK CONSTRAINT [FK_SessionTags_SessionID];

ALTER TABLE [dbo].[SessionTags] WITH CHECK CHECK CONSTRAINT [FK_SessionTags_Tag];

ALTER TABLE [dbo].[SpeakerSessions] WITH CHECK CHECK CONSTRAINT [FK_SpeakerSessions_SpeakerId];

ALTER TABLE [dbo].[SpeakerSessions] WITH CHECK CHECK CONSTRAINT [FK_SpeakerSessions_SessionId];

ALTER TABLE [dbo].[TicketPrices] WITH CHECK CHECK CONSTRAINT [FK_TicketPrices_ConferenceId];

ALTER TABLE [dbo].[TicketPrices] WITH CHECK CHECK CONSTRAINT [FK_TicketPrices_TicketTypeCode];

ALTER TABLE [dbo].[TicketPrices] WITH CHECK CHECK CONSTRAINT [FK_TicketPrices_PricingCategoryCode];

ALTER TABLE [dbo].[WorkshopPresenters] WITH CHECK CHECK CONSTRAINT [FK_WorkshopPresenters_WorkshopId];

ALTER TABLE [dbo].[WorkshopPresenters] WITH CHECK CHECK CONSTRAINT [FK_WorkshopPresenters_SessionId];


GO
PRINT N'Update complete.';


GO
